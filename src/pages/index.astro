---
import BaseLayout from '../layouts/BaseLayout.astro';
import { getCollection } from 'astro:content';

const userLang = Astro.currentLocale || 'es';

const getAllCollectionEntries = (collectionName) => {
  return getCollection(collectionName).then(entries => {
    entries.forEach(entry => {
      const [lang, ...slug] = entry.id.split('-');
      entry.data = {
        ...entry.data,
        lang,
        slug: slug.join('-')
      };
    });
    return entries;
  });
}

const getAllLinks = async (lang) => {
  return await getAllCollectionEntries('links').then((links) =>
      links.filter((entry) => entry.data.lang === lang)
  );
};
const getAllPosts = async (lang) => {
  return await getAllCollectionEntries('posts').then((posts) =>
    posts.filter((entry) => entry.data.lang === lang)
  )
};

const getPublishedLinks = async (lang) => {
  return await getAllLinks(lang).then((links) =>
      links.filter((entry) => entry.data.status.startsWith('published'))
  );
};
const getPublishedPosts = async (lang) => {
  return await getAllPosts(lang).then((posts) =>
    posts.filter((entry) => entry.data.status.startsWith('published'))
  )
};


const links = await getPublishedLinks(userLang);
const posts = await getPublishedPosts(userLang);

const contents = [...posts, ...links].toSorted((a, b) =>
  b.data.date?.edited?.localeCompare(a.data.date?.edited)
);

// Popular posts

const popularContents = contents;

const tagsCount = {};
contents.forEach((content) => {
  content.data.tags.forEach((tag) => {
    if (!tagsCount[tag]) tagsCount[tag] = new Set();
    tagsCount[tag].add(content.id);
  });
});

const tags = Object.keys(tagsCount).sort((a,b) => tagsCount[b].size - tagsCount[a].size);

const renderDate = (completeDate) => {
  const MONTHS = {
    '01': 'enero', '02': 'febrero', '03': 'marzo', '04': 'abril', '05': 'mayo', '06': 'junio', '07': 'julio', '08': 'agosto', '09': 'septiembre', '10': 'octubre', '11': 'noviembre', '12': 'diciembre'
  };
  const [date, time] = completeDate.split(' ');
  const [year, month, day] = date.split('.');

  const dayNumber = parseInt(day, 10);

  return `${dayNumber} de ${MONTHS[month]} de ${year}`;
};

const renderImgSrc = (imageData, title) => {
  if( !imageData?.url ) {
    return `https://placehold.co/400x400/999999/dddddd?font=mono&text=${title.substring(0, title.indexOf(' '))}`;
  }

  return imageData.url;
}

---

<BaseLayout slug="/">
  <div class="grid gap-4 mt-4">
    <div class="grid gap-2">
      <h2 class="text-2xl font-bold">Últimos posts</h2>
      <p class="text-muted-foreground">
        Echa un vistazo a los últimos artículos del blog.
      </p>
    </div>
    <div class="grid gap-6">
      {
        contents.slice(0, 4).map((content) => (
          <div class="grid md:grid-cols-[200px_1fr] gap-4">
            <img
              src={renderImgSrc(content.data.image, content.data.title)}
              alt="Blog post cover"
              width={200}
              height={150}
              class="rounded-lg object-cover"
              style={{ aspectRatio: "200/150", objectFit: "cover" }}
            />
            <div class="space-y-2">
              <h3 class="text-xl font-bold">{content.data.title}</h3>
              <div class="flex items-center gap-2 text-sm text-muted-foreground">
                <div>{content.data.author}</div>
                <div
                  data-orientation="vertical"
                  role="none"
                  class="shrink-0 bg-border h-full w-[1px]"
                  data-id="25"
                />
                <div>{renderDate(content.data.date.created)}</div>
              </div>
              <p class="text-muted-foreground line-clamp-3">
                {content.data.brief}
              </p>
              <a
                href={'./' + content.collection + '/' + content.data.slug + '/'}
                class="text-primary font-medium hover:underline"
              >
              Leer más
              </a>
            </div>
          </div>
        ))
      }
    </div>
    {(popularContents.length>0) &&
      (
      <div class="grid gap-4 mt-8">
        <div class="grid gap-2">
          <h2 class="text-2xl font-bold">Post más populares</h2>
          <p class="text-muted-foreground">
            Aquí tienes una lista con los artículos más leídos.
          </p>
        </div>
        <div class="grid gap-4">

          {
          popularContents.slice(0, 3).map((content, idx) => (
          <div class="flex items-center gap-4">
            <div
              class="flex-shrink-0 w-16 h-16 rounded-lg bg-muted/20 flex items-center justify-center text-2xl font-bold text-muted-foreground"
            >
              {idx+1}
            </div>
            <a class="space-y-1" href={'./' + content.collection + '/' + content.data.slug + '/'}>
              <h3 class="text-lg font-medium">
                {content.data.title}
              </h3>
              <div class="flex items-center gap-2 text-sm text-muted-foreground">
                <div>{content.data.author}</div>
                <div
                  data-orientation="vertical"
                  role="none"
                  class="shrink-0 bg-border h-full w-[1px]"
                  data-id="25"
                >
                </div>
                <div>{renderDate(content.data.date.created)}</div>
              </div>
            </a>
          </div>
          ))}

          <!--
          <div class="flex items-center gap-4">
            <div
              class="flex-shrink-0 w-16 h-16 rounded-lg bg-muted/20 flex items-center justify-center text-2xl font-bold text-muted-foreground"
            >
              2
            </div>
            <div class="space-y-1">
              <h3 class="text-lg font-medium">
                Mastering Responsive Design with CSS
              </h3>
              <div class="flex items-center gap-2 text-sm text-muted-foreground">
                <div>John Smith</div>
                <div
                  data-orientation="vertical"
                  role="none"
                  class="shrink-0 bg-border h-full w-[1px]"
                  data-id="25"
                >
                </div>
                <div>May 15, 2023</div>
              </div>
            </div>
          </div>
          <div class="flex items-center gap-4">
            <div
              class="flex-shrink-0 w-16 h-16 rounded-lg bg-muted/20 flex items-center justify-center text-2xl font-bold text-muted-foreground"
            >
              3
            </div>
            <div class="space-y-1">
              <h3 class="text-lg font-medium">
                Exploring the Future of JavaScript
              </h3>
              <div class="flex items-center gap-2 text-sm text-muted-foreground">
                <div>Sarah Johnson</div>
                <div
                  data-orientation="vertical"
                  role="none"
                  class="shrink-0 bg-border h-full w-[1px]"
                  data-id="25"
                >
                </div>
                <div>April 30, 2023</div>
              </div>
            </div>
          </div>
          -->
        </div>
      </div>
    )}
  </div>
  <!--<ul>{tags.map((t) => <li>{t}</li>)}</ul>-->
</BaseLayout>
